# Makefile.in generated by automake 1.15 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# ---------------------------------------------------------------
# Include paths.
# ---------------------------------------------------------------


VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
@COMPILE_OPENCL_TRUE@am__append_1 = $(top_builddir)/external_libs/fortrancl/libfortrancl.a @LIBS_CLBLAS@ @LIBS_CLFFT@ @CL_LIBS@
@COMPILE_OPENCL_TRUE@am__append_2 = @F90_MODULE_FLAG@$(top_builddir)/external_libs/fortrancl
@COMPILE_METIS_TRUE@am__append_3 = $(top_builddir)/external_libs/metis-5.1/libmetis/libmetis.a \
@COMPILE_METIS_TRUE@	$(top_builddir)/external_libs/metis-5.1/GKlib/libgk.a
@COMPILE_METIS_TRUE@am__append_4 = -I$(top_srcdir)/external_libs/metis-5.1/include/
subdir = src/hamiltonian
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ac_prog_sed.m4 \
	$(top_srcdir)/m4/arch.m4 $(top_srcdir)/m4/arpack.m4 \
	$(top_srcdir)/m4/berkeleygw.m4 $(top_srcdir)/m4/blacs.m4 \
	$(top_srcdir)/m4/blas.m4 $(top_srcdir)/m4/builtin.m4 \
	$(top_srcdir)/m4/check_cl.m4 $(top_srcdir)/m4/clmath.m4 \
	$(top_srcdir)/m4/cuda.m4 \
	$(top_srcdir)/m4/cxx_compile_stdcxx.m4 \
	$(top_srcdir)/m4/elpa.m4 $(top_srcdir)/m4/etsf_io.m4 \
	$(top_srcdir)/m4/etsf_io_fortran.m4 \
	$(top_srcdir)/m4/f90_module_flag.m4 \
	$(top_srcdir)/m4/fc_command_line.m4 \
	$(top_srcdir)/m4/fc_integer.m4 \
	$(top_srcdir)/m4/fc_iso_c_binding.m4 \
	$(top_srcdir)/m4/fc_sizeof.m4 $(top_srcdir)/m4/fcflags.m4 \
	$(top_srcdir)/m4/feast.m4 $(top_srcdir)/m4/fftw.m4 \
	$(top_srcdir)/m4/fortran.m4 $(top_srcdir)/m4/gdlib.m4 \
	$(top_srcdir)/m4/gsl.m4 $(top_srcdir)/m4/isf.m4 \
	$(top_srcdir)/m4/lapack.m4 $(top_srcdir)/m4/libfm.m4 \
	$(top_srcdir)/m4/libxc.m4 $(top_srcdir)/m4/metis.m4 \
	$(top_srcdir)/m4/mpi.m4 $(top_srcdir)/m4/netcdf.m4 \
	$(top_srcdir)/m4/nfft.m4 $(top_srcdir)/m4/nlopt.m4 \
	$(top_srcdir)/m4/octopus_compilation_info.m4 \
	$(top_srcdir)/m4/openmp.m4 $(top_srcdir)/m4/parmetis.m4 \
	$(top_srcdir)/m4/parpack.m4 $(top_srcdir)/m4/pfft.m4 \
	$(top_srcdir)/m4/pnfft.m4 $(top_srcdir)/m4/poke.m4 \
	$(top_srcdir)/m4/pspio.m4 $(top_srcdir)/m4/scalapack.m4 \
	$(top_srcdir)/m4/sparskit.m4 $(top_srcdir)/m4/stdcpp.m4 \
	$(top_srcdir)/m4/tls.m4 $(top_srcdir)/m4/yaml.m4 \
	$(top_srcdir)/m4/zdotc.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(noinst_HEADERS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
AR = ar
ARFLAGS = cru
AM_V_AR = $(am__v_AR_@AM_V@)
am__v_AR_ = $(am__v_AR_@AM_DEFAULT_V@)
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libhamiltonian_a_AR = $(AR) $(ARFLAGS)
libhamiltonian_a_LIBADD =
am__objects_1 = vdw_ts_low.$(OBJEXT)
am__objects_2 = berry.$(OBJEXT) born_charges.$(OBJEXT) \
	boundary_op.$(OBJEXT) energy.$(OBJEXT) epot.$(OBJEXT) \
	functionals.$(OBJEXT) gauge_field.$(OBJEXT) \
	hamiltonian_base.$(OBJEXT) hamiltonian.$(OBJEXT) \
	hgh_projector.$(OBJEXT) hirshfeld.$(OBJEXT) \
	ion_interaction.$(OBJEXT) kb_projector.$(OBJEXT) \
	kick.$(OBJEXT) lasers.$(OBJEXT) lda_u.$(OBJEXT) \
	lda_u_io.$(OBJEXT) libvdwxc.$(OBJEXT) oct_exchange.$(OBJEXT) \
	pcm.$(OBJEXT) pcm_eom.$(OBJEXT) projector.$(OBJEXT) \
	projector_matrix.$(OBJEXT) rkb_projector.$(OBJEXT) \
	scdm.$(OBJEXT) scf_tol.$(OBJEXT) scissor.$(OBJEXT) \
	species_pot.$(OBJEXT) vdw_ts.$(OBJEXT) xc.$(OBJEXT)
am_libhamiltonian_a_OBJECTS = $(am__objects_1) $(am__objects_2)
libhamiltonian_a_OBJECTS = $(am_libhamiltonian_a_OBJECTS)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
PPFCCOMPILE = $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS)
AM_V_PPFC = $(am__v_PPFC_@AM_V@)
am__v_PPFC_ = $(am__v_PPFC_@AM_DEFAULT_V@)
am__v_PPFC_0 = @echo "  PPFC    " $@;
am__v_PPFC_1 = 
FCLD = $(FC)
FCLINK = $(FCLD) $(AM_FCFLAGS) $(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o \
	$@
AM_V_FCLD = $(am__v_FCLD_@AM_V@)
am__v_FCLD_ = $(am__v_FCLD_@AM_DEFAULT_V@)
am__v_FCLD_0 = @echo "  FCLD    " $@;
am__v_FCLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libhamiltonian_a_SOURCES)
DIST_SOURCES = $(libhamiltonian_a_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(noinst_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
am__DIST_COMMON = $(srcdir)/../common-rules.make $(srcdir)/Makefile.in \
	$(top_srcdir)/build-aux/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ALLOCA = @ALLOCA@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CFLAGS_CLBLAS = @CFLAGS_CLBLAS@
CFLAGS_CLFFT = @CFLAGS_CLFFT@
CFLAGS_CUDA = @CFLAGS_CUDA@
CFLAGS_FFTW = @CFLAGS_FFTW@
CFLAGS_NFFT = @CFLAGS_NFFT@
CL_CFLAGS = @CL_CFLAGS@
CL_LIBS = @CL_LIBS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CXXLIBS = @CXXLIBS@
CYGPATH_W = @CYGPATH_W@
DEBUG = @DEBUG@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F90_ACCEPTS_LINE_NUMBERS = @F90_ACCEPTS_LINE_NUMBERS@
F90_FORALL = @F90_FORALL@
F90_MODULE_FLAG = @F90_MODULE_FLAG@
FC = @FC@
FCCPP = @FCCPP@
FCEXTRALIBS = @FCEXTRALIBS@
FCFLAGS = @FCFLAGS@
FCFLAGS_BERKELEYGW = @FCFLAGS_BERKELEYGW@
FCFLAGS_ELPA = @FCFLAGS_ELPA@
FCFLAGS_ETSF_IO = @FCFLAGS_ETSF_IO@
FCFLAGS_FFTW = @FCFLAGS_FFTW@
FCFLAGS_ISF = @FCFLAGS_ISF@
FCFLAGS_LIBFM = @FCFLAGS_LIBFM@
FCFLAGS_LIBXC = @FCFLAGS_LIBXC@
FCFLAGS_NETCDF = @FCFLAGS_NETCDF@
FCFLAGS_NLOPT = @FCFLAGS_NLOPT@
FCFLAGS_PFFT = @FCFLAGS_PFFT@
FCFLAGS_PNFFT = @FCFLAGS_PNFFT@
FCFLAGS_POKE = @FCFLAGS_POKE@
FCFLAGS_PSPIO = @FCFLAGS_PSPIO@
FCFLAGS_f90 = @FCFLAGS_f90@
FCLIBS = @FCLIBS@
GDLIB_CONFIG = @GDLIB_CONFIG@
GD_CFLAGS = @GD_CFLAGS@
GD_LIBS = @GD_LIBS@
GIT_COMMIT = @GIT_COMMIT@
GREP = @GREP@
GSL_CFLAGS = @GSL_CFLAGS@
GSL_CONFIG = @GSL_CONFIG@
GSL_LIBS = @GSL_LIBS@
HAVE_CXX11 = @HAVE_CXX11@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBS_ARPACK = @LIBS_ARPACK@
LIBS_BERKELEYGW = @LIBS_BERKELEYGW@
LIBS_BLACS = @LIBS_BLACS@
LIBS_BLAS = @LIBS_BLAS@
LIBS_CLBLAS = @LIBS_CLBLAS@
LIBS_CLFFT = @LIBS_CLFFT@
LIBS_CUDA = @LIBS_CUDA@
LIBS_ELPA = @LIBS_ELPA@
LIBS_ETSF_IO = @LIBS_ETSF_IO@
LIBS_FEAST = @LIBS_FEAST@
LIBS_FFTW = @LIBS_FFTW@
LIBS_ISF = @LIBS_ISF@
LIBS_LAPACK = @LIBS_LAPACK@
LIBS_LIBFM = @LIBS_LIBFM@
LIBS_LIBXC = @LIBS_LIBXC@
LIBS_METIS = @LIBS_METIS@
LIBS_MPI = @LIBS_MPI@
LIBS_NETCDF = @LIBS_NETCDF@
LIBS_NFFT = @LIBS_NFFT@
LIBS_NLOPT = @LIBS_NLOPT@
LIBS_PARMETIS = @LIBS_PARMETIS@
LIBS_PARPACK = @LIBS_PARPACK@
LIBS_PFFT = @LIBS_PFFT@
LIBS_PNFFT = @LIBS_PNFFT@
LIBS_POKE = @LIBS_POKE@
LIBS_PSPIO = @LIBS_PSPIO@
LIBS_SCALAPACK = @LIBS_SCALAPACK@
LIBS_SPARSKIT = @LIBS_SPARSKIT@
LIB_YAML_CFLAGS = @LIB_YAML_CFLAGS@
LIB_YAML_LIBS = @LIB_YAML_LIBS@
LN_S = @LN_S@
LONG_LINES = @LONG_LINES@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
METIS_CFLAGS = @METIS_CFLAGS@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PARMETIS_CFLAGS = @PARMETIS_CFLAGS@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
UTILITY_PROGRAMS = @UTILITY_PROGRAMS@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_FC = @ac_ct_FC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
fc_type = @fc_type@
fc_version = @fc_version@
fc_wrap = @fc_wrap@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
subdirs = @subdirs@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
noinst_LIBRARIES = libhamiltonian.a

# Fortran sources - keep in alphabetical order
libhamiltonian_f_srcs = \
	berry.F90                        \
	born_charges.F90                 \
	boundary_op.F90                  \
	energy.F90                       \
	epot.F90                         \
	functionals.F90                  \
	gauge_field.F90                  \
	hamiltonian_base.F90             \
	hamiltonian.F90                  \
	hgh_projector.F90                \
	hirshfeld.F90                    \
	ion_interaction.F90              \
	kb_projector.F90                 \
	kick.F90                         \
	lasers.F90                       \
	lda_u.F90                        \
	lda_u_io.F90                     \
	libvdwxc.F90                     \
	oct_exchange.F90                 \
	pcm.F90                          \
	pcm_eom.F90                      \
	projector.F90                    \
	projector_matrix.F90             \
	rkb_projector.F90                \
	scdm.F90                         \
	scf_tol.F90                      \
	scissor.F90                      \
	species_pot.F90                  \
	vdw_ts.F90                       \
	xc.F90


# C/C++ sources - keep in alphabetical order
libhamiltonian_c_srcs = \
	vdw_ts_low.c

libhamiltonian_a_SOURCES = $(libhamiltonian_c_srcs) $(libhamiltonian_f_srcs)

# Include files - keep in alphabetical order
noinst_HEADERS = \
	dft_u_noncollinear_inc.F90       \
        functionals_list.F90             \
        fxc_inc.F90                      \
	hamiltonian_base_inc.F90         \
	hamiltonian_inc.F90              \
	hgh_projector_inc.F90            \
	kb_projector_inc.F90             \
	kxc_inc.F90                      \
	lasers_inc.F90                   \
	lda_u_inc.F90                 \
	oct_exchange_inc.F90             \
	projector_inc.F90                \
	scdm_inc.F90                     \
	scissor_inc.F90                  \
	vxc_inc.F90

# we should not have libyaml here if we used an external one...
FCFLAGS_MODS = @F90_MODULE_FLAG@$(top_builddir)/src/basic \
	@F90_MODULE_FLAG@$(top_builddir)/src/math \
	@F90_MODULE_FLAG@$(top_builddir)/src/species \
	@F90_MODULE_FLAG@$(top_builddir)/src/ions \
	@F90_MODULE_FLAG@$(top_builddir)/src/grid \
	@F90_MODULE_FLAG@$(top_builddir)/src/poisson \
	@F90_MODULE_FLAG@$(top_builddir)/src/frozen \
	@F90_MODULE_FLAG@$(top_builddir)/src/basis_set \
	@F90_MODULE_FLAG@$(top_builddir)/src/states \
	@F90_MODULE_FLAG@$(top_builddir)/src/system \
	@F90_MODULE_FLAG@$(top_builddir)/src/hamiltonian \
	@F90_MODULE_FLAG@$(top_builddir)/src/scf \
	@F90_MODULE_FLAG@$(top_builddir)/src/td \
	@F90_MODULE_FLAG@$(top_builddir)/src/opt_control \
	@F90_MODULE_FLAG@$(top_builddir)/src/sternheimer \
	@F90_MODULE_FLAG@$(top_builddir)/external_libs/bpdn \
	@F90_MODULE_FLAG@$(top_builddir)/external_libs/dftd3 \
	@F90_MODULE_FLAG@$(top_builddir)/external_libs/spglib-1.9.9/src/ \
	@FCFLAGS_LIBXC@ @FCFLAGS_PSPIO@ @FCFLAGS_ISF@ @FCFLAGS_FFTW@ \
	@FCFLAGS_PFFT@ @FCFLAGS_PNFFT@ @FCFLAGS_NETCDF@ \
	@FCFLAGS_ETSF_IO@ @FCFLAGS_BERKELEYGW@ @FCFLAGS_NLOPT@ \
	@FCFLAGS_LIBFM@ @FCFLAGS_ELPA@ @FCFLAGS_POKE@ $(am__append_2)
AM_CPPFLAGS = -I$(top_srcdir)/src/include \
	-I$(top_builddir)/src/include \
	-I$(top_srcdir)/external_libs/spglib-1.9.9/src \
	-I$(top_srcdir)/liboct_parser $(GSL_CFLAGS) $(GD_CFLAGS) \
	@METIS_CFLAGS@ @PARMETIS_CFLAGS@ @CFLAGS_NFFT@ @CFLAGS_FFTW@ \
	@CFLAGS_CUDA@ -DSHARE_DIR='"$(pkgdatadir)"' $(am__append_4)
AM_CCASFLAGS = \
	-I$(top_builddir)/

AM_CXXFLAGS = -I$(top_srcdir)/external_libs/rapidxml

# ---------------------------------------------------------------
# Define libraries here.
# ---------------------------------------------------------------
octopus_LIBS = \
	$(top_builddir)/src/sternheimer/libsternheimer.a \
	$(top_builddir)/src/opt_control/libopt_control.a \
	$(top_builddir)/src/td/libtd.a                   \
	$(top_builddir)/src/scf/libscf.a                 \
	$(top_builddir)/src/system/libsystem.a           \
	$(top_builddir)/src/hamiltonian/libhamiltonian.a \
        $(top_builddir)/src/basis_set/libbasis_set.a     \
	$(top_builddir)/src/states/libstates.a           \
	$(top_builddir)/src/frozen/libfrozen.a           \
	$(top_builddir)/src/poisson/libpoisson.a         \
	$(top_builddir)/src/grid/libgrid.a               \
	$(top_builddir)/src/ions/libions.a               \
	$(top_builddir)/src/species/libspecies.a         \
	$(top_builddir)/src/math/libmath.a               \
	$(top_builddir)/src/basic/libbasic.a

scalapack_LIBS = @LIBS_ELPA@ @LIBS_SCALAPACK@ @LIBS_BLACS@
core_LIBS = \
	@LIBS_FFTW@  @LIBS_LAPACK@ @LIBS_BLAS@                     \
	$(top_builddir)/liboct_parser/liboct_parser.a \
	@GSL_LIBS@ @LIBS_LIBXC@ @FCEXTRALIBS@

external_LIBS = $(top_builddir)/external_libs/qshep/libqshep.a \
	$(top_builddir)/external_libs/spglib-1.9.9/src/libsymspg.a \
	$(top_builddir)/external_libs/bpdn/libbpdn.a \
	$(top_builddir)/external_libs/dftd3/libdftd3.a \
	$(top_builddir)/external_libs/yaml-0.1.4/src/libyaml.a \
	$(am__append_1) $(am__append_3)

# These must be arranged so if LIB1 depends on LIB2, LIB1 must occur before LIB2.
# e.g. ETSF_IO depends on netCDF, ISF depends on LAPACK
outside_LIBS = @LIBS_PSPIO@ @LIBS_POKE@ @LIBS_ISF@ @LIBS_NFFT@ @LIBS_PNFFT@ @LIBS_PFFT@ \
  @LIBS_SPARSKIT@ @LIBS_ETSF_IO@ @LIBS_NETCDF@ @LIBS_LIBFM@ \
  @LIBS_BERKELEYGW@ @LIBS_NLOPT@ @LIBS_PARPACK@ @LIBS_ARPACK@ @GD_LIBS@ \
  @LIBS_PARMETIS@ @LIBS_METIS@ @LIBS_FEAST@ @LIBS_CUDA@ @LIBS_MPI@

other_LIBS = $(external_LIBS) $(scalapack_LIBS) $(outside_LIBS) $(core_LIBS) @CXXLIBS@
all_LIBS = $(octopus_LIBS) $(other_LIBS)

# ---------------------------------------------------------------
# How to compile F90 files.
# ---------------------------------------------------------------
SUFFIXES = _oct.f90 .F90 .o

# ---------------------------------------------------------------
# Miscellaneous.
# ---------------------------------------------------------------

# ctags.
CTAGS = ctags-exuberant -e

# Cleaning.
CLEANFILES = *~ *.bak *.mod *_oct.f90
all: all-am

.SUFFIXES:
.SUFFIXES: _oct.f90 .F90 .o .c .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/../common-rules.make $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/hamiltonian/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/hamiltonian/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(srcdir)/../common-rules.make $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)

libhamiltonian.a: $(libhamiltonian_a_OBJECTS) $(libhamiltonian_a_DEPENDENCIES) $(EXTRA_libhamiltonian_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libhamiltonian.a
	$(AM_V_AR)$(libhamiltonian_a_AR) libhamiltonian.a $(libhamiltonian_a_OBJECTS) $(libhamiltonian_a_LIBADD)
	$(AM_V_at)$(RANLIB) libhamiltonian.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vdw_ts_low.Po@am__quote@

.F90.obj:
	$(AM_V_PPFC)$(PPFCCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(HEADERS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-noinstLIBRARIES cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am

.PRECIOUS: Makefile


# Compilation is a two-step process: first we preprocess F90 files
# to generate _oct.f90 files. Then, we compile this _oct.f90 into
# an object file and delete the intermediate file.
.F90.o:
	@FCCPP@ @CPPFLAGS@ $(AM_CPPFLAGS) -I. $< > $*_oct.f90
	$(top_srcdir)/build/preprocess.pl $*_oct.f90 \
	  "@DEBUG@" "@F90_ACCEPTS_LINE_NUMBERS@" "@F90_FORALL@"
	@FC@ @FCFLAGS@ $(FCFLAGS_MODS) -c @FCFLAGS_f90@ -o $@ $*_oct.f90
	@rm -f $*_oct.f90

# This rule is basically to create a _oct.f90 file by hand for
# debugging purposes. It is identical to the first part of
# the .F90.o rule.
.F90_oct.f90:
	@FCCPP@ @CPPFLAGS@ $(AM_CPPFLAGS) -I. $< > $*_oct.f90
	$(top_srcdir)/build/preprocess.pl $*_oct.f90 \
	  "@DEBUG@" "@F90_ACCEPTS_LINE_NUMBERS@" "@F90_FORALL@"

# Local Variables:
# mode: Makefile
# coding: utf-8
# End:

# This is to generate the dependencies. It makes use of the makedepf90
# program of Erik Edelmann
# (http://www.helsinki.fi/~eedelman/makedepf90.html). It should be run
# from time to time (just typing make depend within the src
# directory), substituting the dependencies below by the resulting new
# dependencies. (For normal compilation of octopus, there is
# absolutely no need of installing makedepf90).
depend:
	@makedepf90 $(libhamiltonian_f_srcs)

# DO NOT EDIT DIRECTLY --- use make depend to generate the dependencies and copy-paste the result here

berry.o : berry.F90 
born_charges.o : born_charges.F90 
boundary_op.o : boundary_op.F90 
energy.o : energy.F90 
epot.o : epot.F90 xc.o species_pot.o projector.o lasers.o kick.o ion_interaction.o gauge_field.o 
functionals.o : functionals.F90 libvdwxc.o functionals_list.F90
gauge_field.o : gauge_field.F90 projector.o 
hamiltonian_base.o : hamiltonian_base.F90 hamiltonian_base_inc.F90 projector_matrix.o projector.o hgh_projector.o kb_projector.o epot.o 
hamiltonian.o : hamiltonian.F90 hamiltonian_inc.F90 functionals.o xc.o scissor.o scdm.o pcm.o projector.o oct_exchange.o lasers.o gauge_field.o epot.o hamiltonian_base.o energy.o boundary_op.o lda_u.o
hgh_projector.o : hgh_projector.F90 hgh_projector_inc.F90 
hirshfeld.o : hirshfeld.F90 species_pot.o 
ion_interaction.o : ion_interaction.F90 
kb_projector.o : kb_projector.F90 kb_projector_inc.F90 
kick.o : kick.F90 pcm.o
lasers.o : lasers.F90 lasers_inc.F90 
libvdwxc.o : libvdwxc.F90 
oct_exchange.o : oct_exchange.F90 oct_exchange_inc.F90 xc.o 
pcm.o : pcm.F90 pcm_eom.o
pcm_eom.o : pcm_eom.F90 
projector.o : projector.F90 projector_inc.F90 rkb_projector.o kb_projector.o hgh_projector.o 
projector_matrix.o : projector_matrix.F90 
rkb_projector.o : rkb_projector.F90
scdm.o : scdm.F90 scdm_inc.F90 xc.o
scf_tol.o : scf_tol.F90
scissor.o : scissor.F90 scissor_inc.F90
lda_u.o : lda_u.F90 lda_u_inc.F90 dft_u_noncollinear_inc.F90 species_pot.o energy.o hamiltonian_base.o
lda_u_io.o : lda_u_io.F90 lda_u.o
species_pot.o : species_pot.F90
vdw_ts.o : vdw_ts.F90 hirshfeld.o
xc.o : xc.F90 kxc_inc.F90 fxc_inc.F90 vxc_inc.F90 functionals.o libvdwxc.o

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
